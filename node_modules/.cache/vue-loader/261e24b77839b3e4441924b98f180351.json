{"remainingRequest":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-cli-plugin-quasar/lib/loader.auto-import.js?kebab!/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/cache-loader/dist/cjs.js??ref--0-1!/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhouzilong/Desktop/2020-09-19-0005/src/pages/Forum.vue?vue&type=template&id=13b106a6&","dependencies":[{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/src/pages/Forum.vue","mtime":1604068502715},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-cli-plugin-quasar/lib/loader.auto-import.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}