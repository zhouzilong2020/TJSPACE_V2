{"remainingRequest":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/babel-loader/lib/index.js!/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhouzilong/Desktop/2020-09-19-0005/src/store/userInfo.js","dependencies":[{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/src/store/userInfo.js","mtime":1600434203000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhouzilong/Desktop/2020-09-19-0005/src/store/userInfo.js"],"names":["loginUser","registerUser","getUserInfo","modifyUserInfo","getHistoryComment","collectCourse","getCollectedCourse","cancelCollect","setCookie","getCookie","removeCookie","namespaced","state","userInfo","token","isLoading","historyComment","collectedCourse","mutations","setUserInfo","payload","degree","gender","headimageurl","majorid","majorId","nickname","phonenumber","phoneNumber","userid","userId","year","setIsLoading","setToken","setHistoryComment","removeHistoryComment","setCollectedCourse","push","actions","context","commit","resp","console","log","hisComment","colCourse","data","status","collectedcourse","resp1","data1","data2","resp2","hisComment1","colCourse1","logoutUser","account","email","password"],"mappings":"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","sourcesContent":["import { loginUser, registerUser, getUserInfo, modifyUserInfo } from \"../services/userService\"\nimport { getHistoryComment } from '../services/commentService'\nimport { collectCourse, getCollectedCourse, cancelCollect } from '../services/courseService'\nimport { setCookie, getCookie, removeCookie } from '../utils/utils'\n/**\n * 用户登录的数据仓库\n */\nexport default {\n    namespaced: true,\n    state: {\n        userInfo: null,\n        token: null,\n        isLoading: false,\n\n        historyComment: null,\n        collectedCourse: null,\n\n    },\n    mutations: {\n        /**\n         * 初始化个人信息\n         * @param {*} state 指向本仓库的state\n         * @param {Object} payload payload以object形式传入，包括nickname，userid，email等\n         */\n        setUserInfo(state, payload) {\n            state.userInfo = payload;\n        },\n\n        /**\n         * 修改个人信息\n         * @param {*} state \n         * @param {*} payload 这里需要和后段接口对应\n         */\n        modifyUserInfo(state, payload) {\n            state.userInfo = {\n                degree: payload.degree,\n                gender: payload.gender,\n                headimageurl: null,\n                majorid: payload.majorId,\n                nickname: payload.nickname,\n                phonenumber: payload.phoneNumber,\n                userid: payload.userId,\n                year: payload.year,\n            }\n        },\n\n        /**\n         * 修改是否正在加载\n         * @param {*} state 指向本仓库的state\n         * @param {boolean} payload payload传入true or false\n         */\n        setIsLoading(state, payload) {\n            state.isLoading = payload;\n        },\n        /**\n         * 设置token\n         * @param {*} state \n         * @param {*} payload \n         */\n        setToken(state, payload) {\n            state.token = payload;\n        },\n\n        /**\n         * 设置历史评价\n         * @param {*} state \n         * @param {*} payload \n         */\n        setHistoryComment(state, payload) {\n            state.historyComment = payload;\n        },\n\n        /**\n         * 删除评价\n         * @param {*} state \n         * @param {*} payload \n         */\n        removeHistoryComment(state, payload) {\n            state.historyComment = payload;\n        },\n\n        /**\n         * 设置用户收藏的课程\n         * @param {*} state \n         * @param {*} payload \n         */\n        setCollectedCourse(state, payload) {\n            state.collectedCourse = payload;\n        },\n\n        /**\n         * 新加收藏课程\n         * @param {*} state \n         * @param {*} payload \n         */\n        collectCourse(state, payload){\n            state.collectedCourse.push(payload)\n        }\n\n        /**\n         * 取消收藏课程\n         * @param {*} state \n         * @param {*} payload \n         */\n        // cancelCollect(state, payload){\n            \n        // }\n        \n    },\n\n    actions: {\n        /**\n         * 登录用户\n         * @param {*} context \n         * @param {Object} payload payload传入email，password\n         */\n        async loginUser(context, payload) {\n            context.commit(\"setIsLoading\", true);\n\n            let token = getCookie('TJSPACE-token')\n            let userId = getCookie('TJSPACE-userId')\n            if (token && userId) {\n                // 如果cookie中有保存用户信息，则使用cookie登录\n                var resp = await getUserInfo({\n                    userId,\n                    token\n                })\n                console.log('after cookie resp', resp)\n                if (resp) {\n                    //成功获取到了用户信息\n                    //继续获取用户的收藏、历史评论\n                    var hisComment = await getHistoryComment({\n                        userId,\n                        token\n                    })\n                    var colCourse = await getCollectedCourse({\n                        userId,\n                        token\n                    })\n                    if (hisComment) {\n                        context.commit('setHistoryComment', hisComment.data)\n                    }\n                    if (colCourse.status == false) {\n                        context.commit('setCollectedCourse', [])\n                    } else {\n                        context.commit('setCollectedCourse', colCourse.collectedcourse)\n                    }\n                    context.commit(\"setUserInfo\", resp)\n                    context.commit(\"setToken\", token)\n                }\n            }\n            else {\n                var resp1 = await loginUser(payload);\n                console.log(resp1);\n                if (resp1.status) {\n                    // 登录成功，记录其token\n                    context.commit('setToken', \"Bearer \" + resp1.data1)\n\n                    // 使用token获取用户个人信息\n                    var resp2 = await getUserInfo({\n                        userId: resp1.data2,\n                        token: 'Bearer ' + resp1.data1\n                    })\n\n                    if (resp2) {\n                        //继续获取用户的收藏、历史评论\n                        var hisComment1 = await getHistoryComment({\n                            userId: resp1.data2,\n                            token: 'Bearer ' + resp1.data1\n                        })\n                        var colCourse1 = await getCollectedCourse({\n                            userId: resp1.data2,\n                            token: 'Bearer ' + resp1.data1\n                        })\n                        // 获取历史信息成功\n                        if (hisComment1) {\n                            context.commit('setHistoryComment', hisComment1.data)\n                        }\n                        // console.log('asdasdasdasdasdasdasd',colCourse1)\n                        // 获取的收藏信息为空\n                        if (colCourse1.status == false) {\n                            context.commit('setCollectedCourse', [])\n                        } else {\n                            context.commit('setCollectedCourse', colCourse1.collectedcourse)\n                        }\n                        setCookie('TJSPACE-token', 'Bearer ' + resp1.data1, 1)\n                        setCookie('TJSPACE-userId', resp1.data2, 1)\n                        //成功获取到了用户信息\n                        context.commit(\"setUserInfo\", resp2)\n                    }\n                }\n            }\n\n            context.commit(\"setIsLoading\", false);\n        },\n        /**\n         * 退出登录，将数据仓库中的用户信息置空\n         * @param {*} context \n         */\n        async logoutUser(context) {\n            console.log(\"in store logoutUser\")\n\n            context.commit('setToken', null)\n            context.commit('setUserInfo', null)\n\n            // 清楚相应的cookie\n            removeCookie('TJSPACE-token')\n            removeCookie('TJSPACE-userId')\n\n            return true\n        },\n        /**\n         * 注册用户\n         * @param {*} context \n         * @param {Object} payload 传入邮箱，密码。用户名，昵称\n         */\n        async registerUser(context, payload) {\n            context.commit(\"setIsLoading\", true);\n            var resp = await registerUser(payload)\n            console.log(\"reg user resp:\", resp)\n            // 注册成功\n            if (resp.status) {\n                resp = await loginUser({\n                    account: {\n                        email: payload.email,\n                        password: payload.password\n                    }\n                });\n                console.log(\"login user\", resp);\n                if (resp.status) {\n                    // 登录成功，记录其token\n                    context.commit('setToken', \"Bearer \" + resp.data1)\n                    // 使用token获取用户个人信息\n                    if (resp.data1) {\n                        var resp2 = await getUserInfo({\n                            userId: resp.data2,\n                            token: 'Bearer ' + resp.data1\n                        })\n                    }\n                    if (resp2) {\n                        context.commit(\"setUserInfo\", resp2)\n                    }\n                }\n            }\n            context.commit(\"setIsLoading\", false);\n            return resp\n        },\n\n        /**\n         * 修改个人信息\n         * @param {*} context \n         * @param {*} payload 传入修改后的个人信息{}\n         */\n        async modifyUserInfo(context, payload) {\n            context.commit(\"setIsLoading\", true);\n            console.log('in store modify userInfo ', payload)\n            var resp = await modifyUserInfo(payload)\n            if (resp.status) {\n                //修改个人信息成功\n                context.commit('modifyUserInfo', payload)\n            }\n            context.commit(\"setIsLoading\", false);\n            return resp\n        },\n\n        async collectCourse(context, payload) {\n            // context.commit(\"setIsLoading\", true);\n            console.log('in store collect course', payload)\n            var resp = await collectCourse(payload)\n            if (resp.status) {\n                //添加了课程\n                var colCourse = await getCollectedCourse(payload)\n                // 获取的收藏信息为空\n                if (colCourse.status == false) {\n                    context.commit('setCollectedCourse', [])\n                } else {\n                    context.commit('setCollectedCourse', colCourse.collectedcourse)\n                }\n            }\n            // context.commit(\"setIsLoading\", false);\n            return resp\n        },\n\n        async cancelCollect(context, payload) {\n            // context.commit(\"setIsLoading\", true);\n            console.log('in store cancel course ', payload)\n            var resp = await cancelCollect(payload)\n            console.log('asdasdasd', resp)\n            if (resp.status) {\n                //删除了课程\n                var colCourse = await getCollectedCourse(payload)\n                // 获取的收藏信息为空\n                if (colCourse.status == false) {\n                    context.commit('setCollectedCourse', [])\n                } else {\n                    context.commit('setCollectedCourse', colCourse.collectedcourse)\n                }\n            }\n            // context.commit(\"setIsLoading\", false);\n            return resp\n        }, \n\n\n    },\n}\n"]}]}