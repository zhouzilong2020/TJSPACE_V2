{"remainingRequest":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/babel-loader/lib/index.js!/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhouzilong/Desktop/2020-09-19-0005/src/services/commentService.js","dependencies":[{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/src/services/commentService.js","mtime":1600437229000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhouzilong/Desktop/2020-09-19-0005/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhouzilong/Desktop/2020-09-19-0005/src/services/commentService.js"],"names":["axios","URL","getComment","payload","console","log","get","headers","Authorization","token","params","courseId","resp","data","evaluateComment","post","commentId","userId","type","getEvaluate","cancelEvaluation","getCommentInfo","commentInfo","makeComment","apiInterface","canMakeComment","teacherId","getHistoryComment","deleteComment"],"mappings":"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","sourcesContent":["// 获取评论 ！哈哈\nimport axios from \"axios\";\n// import Qs from  'qs'\nimport { URL } from './config'\n/**\n * 获取用户评论评论\n */\nexport async function getComment(payload) {\n    console.log(\"in get comment\", payload)\n    var resp = await axios.get(`${URL}Show/comment`, {\n        headers: {\n            Authorization: payload.token,\n        },\n        params: {\n            courseId: payload.courseId,\n        },\n    });\n    console.log(\"in getComment response\", resp);\n    return resp.data;\n}\n\n/**\n * 用户发表对课程评价的评价\n * @param {Object} payload userID, commentID, type(1 有用， 2 没用)\n */\nexport async function evaluateComment(payload) {\n    console.log(\"in evaluate comment\", payload)\n    var resp = await axios.post(`${URL}Comment/EvaluateComment`, {},\n        {\n            headers: {\n                Authorization: payload.token,\n                // 'Content-Type':'application/x-www-form-urlencoded'\n            },\n            params: {\n                commentId: payload.commentId,\n                userId: payload.userId,\n                type: payload.type\n            }\n        },\n    );\n    console.log(\"in evaluate comment response\", resp);\n    return resp.data;\n}\n\n/**\n * 获取用户对当前课程评价的历史评价\n * @param {Object} payload 传入 userId， commentId \n */\nexport async function getEvaluate(payload) {\n    console.log(\"in getEvaluate \", payload)\n    var resp = await axios.get(`${URL}Comment/CanEvaluate`, {\n        headers: {\n            Authorization: payload.token,\n        },\n        params: {\n            userId: payload.userId,\n            commentId: payload.commentId,\n        },\n    });\n    console.log(\"in getEvaluate response\", resp);\n    return resp.data;\n\n}\n\n\n/**\n * 取消评论\n * @param {Object} payload 传入 userId, commentId\n */\nexport async function cancelEvaluation(payload) {\n    console.log(\"in cancel Evaluation \", payload)\n    var resp = await axios.post(`${URL}Comment/CancelEvaluation`, {},\n        {\n            headers: {\n                Authorization: payload.token,\n                'Content-Type': 'application/json'\n            },\n            params: {\n                commentId: payload.commentId,\n                userId: payload.userId,\n            },\n        }\n    );\n    console.log(\"in cancel Evaluate response\", resp);\n    return resp.data;\n\n}\n\n\n/**\n * \n * @param {Object} payload payload传入token，userId\n */\nexport async function getCommentInfo(payload) {\n    var resp = await axios.get(`${URL}Comment/CancelEvaluation`,\n        {\n            headers: {\n                Authorization: payload.token,\n            },\n            params: {\n                userId: payload.userId,\n            }\n        })\n    console.log('data in commentinfo:', this.commentInfo)\n    return resp.data\n}\n\n/**\n * \n * 发表对课程的评价\n * @param {*} payload  \n */\nexport async function makeComment(payload) {\n    console.log('in commit comment', { ...payload.apiInterface })\n    var resp = await axios.post(`${URL}Comment/PostComment`, {}, {\n        headers: {\n            Authorization: payload.token\n        },\n        params: {\n            ...payload.apiInterface\n        }\n\n    })\n    console.log('after submit:', resp)\n    return resp.data\n}\n\n\n/**\n * 是否能够评价某一个课程信息\n * @param {*} payload {userId, courseId, teacherId}\n */\nexport async function canMakeComment(payload) {\n    console.log('in canMakeComment ', payload)\n    var resp = await axios.get(`${URL}Comment/CanPostComment`,\n        {\n            headers: {\n                Authorization: payload.token,\n            },\n            params: {\n                userId: payload.userId,\n                courseId: payload.courseId,\n                teacherId: payload.teacherId\n            }\n        })\n    console.log('after canMakeComment', resp)\n    return resp.data\n}\n\n/**\n * 返回历史评论信息\n * @param {Object}} payload {token, userId}\n */\nexport async function getHistoryComment(payload) {\n    console.log('in get history comment', payload)\n    let resp = await axios.get(`${URL}Show/personalcomment`, {\n        headers: {\n            Authorization: payload.token,\n        },\n        params: {\n            userId: payload.userId\n        }\n    })\n    console.log('after getting history comment ', resp)\n    return resp.data\n}\n\n\n/**\n * 删除用户评价\n * @param {Object} payload {token, commentId}\n */\nexport async function deleteComment(payload) {\n    console.log('in get delete comment', payload)\n    let resp = await axios.post(`${URL}Show/personalcomment`, {},\n        {\n            headers: {\n                Authorization: payload.token,\n            },\n            params: {\n                userId: payload.commentId\n            }\n        })\n    console.log('after delete history comment ', resp)\n    return resp.data\n}\n"]}]}